/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.vetorinterativo;

import java.util.Arrays;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author RAFAEL
 */
public class vetorInterativo extends javax.swing.JFrame {
    
    int vetor[] = new int[10];      //Cria um vetor de 10 posições(0 a 9)
    DefaultListModel lista = new DefaultListModel();    //Cria um modelo de lista padrão, 
    int selecionado = 0;                                //essa lista está conectada a listaVetor no projeto.  
    
    public vetorInterativo() {  //Método construtor
        initComponents();
        for(int c = 0; c < vetor.length; c++){                  //assim que executado, o programa percorre
            lista.addElement("[" + c + "]  --> " + vetor[c]);   //O vetor e vai adicionando seus valores a lista,
        }                                                       //no início, o vetor estará vazio, todas as posições são 0.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        num = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaVetor = new javax.swing.JList<>();
        botaoAdd = new javax.swing.JButton();
        botaoRemove = new javax.swing.JButton();
        botaoOrd = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        numSelect = new javax.swing.JLabel();
        botaoZerar = new javax.swing.JButton();
        botaoProcurar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Vetor");

        listaVetor.setModel(lista);
        listaVetor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaVetorMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listaVetor);

        botaoAdd.setText("Adicionar");
        botaoAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAddActionPerformed(evt);
            }
        });

        botaoRemove.setText("Remover");
        botaoRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoRemoveActionPerformed(evt);
            }
        });

        botaoOrd.setText("Ordenar");
        botaoOrd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoOrdActionPerformed(evt);
            }
        });

        jLabel1.setText("Vetor");

        numSelect.setText("[0]");

        botaoZerar.setText("Zerar vetor");
        botaoZerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoZerarActionPerformed(evt);
            }
        });

        botaoProcurar.setText("Procurar");
        botaoProcurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoProcurarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(num, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botaoProcurar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botaoZerar, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                    .addComponent(botaoRemove, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botaoAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botaoOrd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(numSelect)))
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(botaoAdd)
                            .addComponent(num, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botaoRemove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botaoOrd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botaoZerar)
                        .addGap(18, 18, 18)
                        .addComponent(botaoProcurar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(numSelect))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAddActionPerformed
        vetor[selecionado] = Integer.parseInt(num.getValue().toString());   //O número escolhido no controle giratório será recebido 
        lista.removeAllElements();    //Remove os elementos da lista        //na posição selecionada.
        for(int c = 0; c < vetor.length; c++){
            lista.addElement("[" + c + "]  --> " + vetor[c]);  //A lista é refeita com o novo valor adicionado.
        }
    }//GEN-LAST:event_botaoAddActionPerformed

    private void listaVetorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaVetorMouseClicked
        selecionado = listaVetor.getSelectedIndex();  //A variável selecionado recebe a posição selecionada na listaVetor.
        numSelect.setText("[" + selecionado + "]");   //O texto de numSelect muda para [selecionado].
    }//GEN-LAST:event_listaVetorMouseClicked

    private void botaoRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoRemoveActionPerformed
        vetor[selecionado] = 0;     //A posição selecionada recebe 0.
        lista.removeAllElements();  //Remove os elementos da lista
        for(int c = 0; c < vetor.length; c++){
            lista.addElement("[" + c + "]  --> " + vetor[c]);   //A lista é refeita com o valor removido.
        }
    }//GEN-LAST:event_botaoRemoveActionPerformed

    private void botaoOrdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoOrdActionPerformed
        Arrays.sort(vetor);          //Ordena os valores das posições do vetor.
        lista.removeAllElements();   //Remove os elementos da lista 
        for(int c = 0; c<vetor.length; c++){
            lista.addElement("[" + c + "]  --> " + vetor[c]);   //A lista é refeita com o valores ordenados.
        }
    }//GEN-LAST:event_botaoOrdActionPerformed

    private void botaoZerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoZerarActionPerformed
        int resp = JOptionPane.showConfirmDialog(null, "Tem certeza?", "Zerar vetor", JOptionPane.YES_NO_OPTION);
        if(resp==0){
            Arrays.fill(vetor, 0);      //Preenche todos as posições do vetor com o valor 0.
            lista.removeAllElements();  //Remove os elementos da lista 
            for(int c = 0; c<vetor.length; c++){
               lista.addElement("[" + c + "]  --> " + vetor[c]);   //A lista é refeita com o valores zerados.
            }
        }else{}
    }//GEN-LAST:event_botaoZerarActionPerformed

    private void botaoProcurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoProcurarActionPerformed
        int resp = JOptionPane.showConfirmDialog(null, "Deseja ordenar automaticamente o vetor para busca binária?",
                        "Confirmação", JOptionPane.YES_NO_OPTION); //Exibe uma janela de confirmação(Sim-0 ou Não-1).
        if(resp == 0){      //Se aperta o botão "Sim"
            
                    //--------Busca binária--------//                    
            Arrays.sort(vetor); //Ordena o vetor.
            lista.removeAllElements();
            for(int c = 0; c<vetor.length; c++){
                lista.addElement("[" + c + "]  --> " + vetor[c]); //A lista é refeita com o valores ordenados.
                int procura = Arrays.binarySearch(vetor, Integer.parseInt(num.getValue().toString())); //Procura o valor desejado no vetor.
                listaVetor.setSelectedIndex(procura); //Seleciona na lista, a posição em q o número esta no vetor.
            }
        }else if(resp==1){  
            
                   //--------Busca sequencial--------//        
            int procura = Integer.parseInt(num.getValue().toString()); //procura recebe o valor a ser buscado.
            for (int c = 0; c<vetor.length; c++){ //O controle de repetição passa por todo o vetor.
                if(procura==vetor[c]){           //Se o número procurado for igual ao número que está na posição c do vetor.
                listaVetor.setSelectedIndex(c);  //Seleciona na lista, a posição em q o número esta no vetor.
                }
            }    
        }
    }//GEN-LAST:event_botaoProcurarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(vetorInterativo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(vetorInterativo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(vetorInterativo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(vetorInterativo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new vetorInterativo().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoAdd;
    private javax.swing.JButton botaoOrd;
    private javax.swing.JButton botaoProcurar;
    private javax.swing.JButton botaoRemove;
    private javax.swing.JButton botaoZerar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listaVetor;
    private javax.swing.JSpinner num;
    private javax.swing.JLabel numSelect;
    // End of variables declaration//GEN-END:variables
}
